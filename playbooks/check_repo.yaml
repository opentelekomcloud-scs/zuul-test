---
- name: Check Repository for Recent Changes and Merge if Needed
  hosts: localhost
  gather_facts: false
  vars:
#    source_repo: "https://github.com/osism/testbed"
    source_repo: "https://github.com/opentelekomcloud-scs/zuul-test"
    target_repo: "https://github.com/opentelekomcloud-scs/zuul-test-src-repo"
    working_directory: "/tmp/repo-sync"
    commit_message: "Automated merge of changes from source repo"
    repo_url: "https://api.github.com/repos/osism/testbed/commits"
    headers:
      Accept: "application/vnd.github.v3+json"
    time_limit: "{{ lookup('pipe', 'date --date=\"24 hours ago\" +%Y-%m-%dT%H:%M:%SZ') }}"
  tasks:
    - name: Get the latest commits from the repository
      uri:
        url: "{{ repo_url }}"
        method: GET
        headers: "{{ headers }}"
        return_content: true
      register: repo_commits
 
    - name: Debug
      debug:
        var: repo_commits

    - name: Check if there are any commits in the last 24 hours
      set_fact:
        changed: "{{ (repo_commits.json | selectattr('commit.committer.date', 'gt', time_limit) | list | count) > 0 }}"

    - name: Output the changed flag
      debug:
        msg: "Repository changed in the last 24 hours: {{ changed }}"

    - name: Clone the target repository if changes detected
      ansible.builtin.git:
        repo: "{{ target_repo }}"
        dest: "{{ working_directory }}"
        clone: yes
        update: no
      when: changed
      register: clone_target

    # - name: Add the remote source repository
    #   ansible.builtin.git:
    #     repo: "{{ source_repo }}"
    #     dest: "{{ working_directory }}"
    #     remote: source
    #   when: changed 

    # - name: Fetch the latest changes from the source repository
    #   ansible.builtin.git: 
    #     repo: "{{ source_repo }}" 
    #     dest: "{{ working_directory }}"
    #     remote: source
    #     update: yes
    #   when: changed
    #   register: git_result
 
    # - name: Merge changes from the source repository
    #   ansible.builtin.command:
    #     cmd: git merge source/master --no-commit --no-ff
    #     chdir: "{{ working_directory }}"
    #   register: merge_result
    #   failed_when: merge_result.rc != 0 and 'CONFLICT' not in merge_result.stdout and 'CONFLICT' not in merge_result.stderr
    #   ignore_errors: true

    # - name: Check if there were conflicts
    #   ansible.builtin.fail:
    #     msg: "Merge conflicts detected. Manual intervention required."
    #   when:
    #     - merge_result.rc != 0
    #     - ("CONFLICT" in merge_result.stdout or "CONFLICT" in merge_result.stderr)

    # - name: Commit the merged changes if there were changes
    #   ansible.builtin.git:
    #     repo: "{{ target_repo }}"
    #     dest: "{{ working_directory }}"
    #     message: "{{ commit_message }}"
    #     commit: yes
    #   when: 
    #     - merge_result.changed
    #     - changed

    # - name: Push the changes to the target repository if there were changes
    #   ansible.builtin.git:
    #     repo: "{{ target_repo }}"
    #     dest: "{{ working_directory }}"
    #     push: yes
    #   when: 
    #     - merge_result.changed
    #     - changed

    # - name: Clean up the working directory after all operations
    #   ansible.builtin.file:
    #     path: "{{ working_directory }}"
    #     state: absent
    #   when: changed
