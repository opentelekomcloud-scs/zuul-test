---
- name: Check Repository for Recent Changes and Merge if Needed
  hosts: localhost
  gather_facts: true
  vars_files:
    - vars/repositories.yml  
  vars:
    source_repo: "https://github.com/opentelekomcloud-scs/zuul-test"
    # target_repo: "https://github.com/opentelekomcloud-scs/zuul-test-src-repo"
    target_repo: "https://github.com/osism/testbed"
    basepath: "{{ ansible_user_dir }}/src/{{ repositories['testbed']['path'] }}"
    commit_message: "Automated merge of changes from source repo"
    repo_url: "https://api.github.com/repos/osism/testbed/commits"
    headers:
      Accept: "application/vnd.github.v3+json"
    time_limit: "{{ lookup('pipe', 'date --date=\"24 hours ago\" +%Y-%m-%dT%H:%M:%SZ') }}"
  tasks:
    - name: Get the latest commits from the repository
      uri:
        url: "{{ repo_url }}"
        method: GET
        headers: "{{ headers }}"
        return_content: true
      register: repo_commits
 
    # - name: Debug
    #   debug:
    #     var: repo_commits

    - name: Check if there are any commits in the last 24 hours
      set_fact:
        changed: "{{ (repo_commits.json | selectattr('commit.committer.date', 'gt', time_limit) | list | count) > 0 }}"

    - name: Output the changed flag
      debug:
        msg: "Repository changed in the last 24 hours: {{ changed }}"

    - name: Execute playbooks if repository changed
      block:

        - name: Debug Basepath
          debug:
            msg: "Basepath: {{ basepath }} bzw. {{ repositories['testbed']['path'] }}, Targetrepo: {{ repositories['testbed']['repo'] }}"

        - name: Clone the target repository if changes detected
          ansible.builtin.git:
            repo: "{{ target_repo }}"
            dest: "{{ basepath }}"
            clone: yes 
            update: no
          when: changed
          register: clone_target

        - name: Find all files and directories basepath
          ansible.builtin.find:
            paths: "{{ basepath }}/playbooks"
            recurse: yes
          register: files

        - name: Display all files and directories
          debug:
            msg: "{{ item.path }}"
          loop: "{{ files.files }}"

        - name: Execute pre-deployment playbook
          ansible.builtin.include_tasks: "{{ basepath }}/playbooks/pre.yaml"

        - name: Execute deployment playbook
          ansible.builtin.include_tasks: "{{ basepath }}/playbooks/deploy.yaml"

        - name: Execute post-deployment playbook
          ansible.builtin.include_tasks: "{{ basepath }}/playbooks/post.yaml"
        
        - name: Execute check playbook on successful deployment
          ansible.builtin.include_tasks: "{{ playbook_dir }}/check.yaml"
          
      when: changed
      rescue:
        - name: Handle errors in deployment scripts
          debug:
            msg: "An error occurred during the deployment process."

      always:
        - name: Execute cleanup playbook
          ansible.builtin.include_tasks: "{{ basepath }}/playbooks/cleanup.yaml"
